;-*-emacs-lisp-*-

;; Emacs package source
(require 'package)

;;; slove contract melpa.gnu.org:443 question
;; https://www.reddit.com/r/emacs/comments/cdei4p/failed_to_download_gnu_archive_bad_request/etw48ux
;; https://stackoverflow.com/questions/29085937/package-refresh-contents-hangs-at-contacting-host-elpa-gnu-org80
;; (setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
;; 			 ("marmalade" . "http://marmalade-repo.org/packages/")
;; 			 ("melpa" . "http://melpa.org/packages/")))
;(setq package-archives '(("gnu"   . "http://mirrors.tuna.tsinghua.edu.cn/elpa/gnu/")
;                         ("melpa" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/melpa/")))

(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (proto (if no-ssl "http" "https")))
  (when no-ssl (warn "\
Your version of Emacs does not support SSL connections,
which is unsafe because it allows man-in-the-middle attacks.
There are two things you can do about this warning:
1. Install an Emacs version that does support SSL and be safe.
2. Remove this warning from your init file so you won't see it again."))
  (add-to-list 'package-archives (cons "melpa" (concat proto "://melpa.org/packages/")) t)
  ;; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`
  ;; and `package-pinned-packages`. Most users will not need or want to do this.
  ;;(add-to-list 'package-archives (cons "melpa-stable" (concat proto "://stable.melpa.org/packages/")) t)
  )

(package-initialize) ;; You might already have this line

;; load another setting path
(add-to-list 'load-path "~/.emacs.d/lisp")

;; org setting
(require 'init-org "./org/init-org")

;; customize
(require 'customize "./customize/customize.el")

;; utils settings
(require 'init-utils "./utils/init-utils")

;; package manage tools
(require 'init-cask "./cask/init-cask")

;; another pacakge manage tools -- quelpa
(require 'init-quelpa "./quelpa/init-quelpa")
;; customize keyboard macro
(fset 'helloa
   (kmacro-lambda-form [?\( ?m ?e ?s ?s ?a ?g ?e ?  ?\" ?h ?e ?l ?l ?o ?\" ?\)] 0 "%d"))

;; my-command-line macro
(fset 'my-comment-line
      (kmacro-lambda-form [?Â» ?\C-u ?5 ?0 ?-] 0 "%d"))

;; convenient
(defalias 'rs 'replace-string)

(provide 'init-package)
