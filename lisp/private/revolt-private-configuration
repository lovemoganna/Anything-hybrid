#+-*-mode: org;-*-
#+title: Revolt's private configuration in arch linux
#+startup: content

** Windows Tools 
*** Stumpwm
***** Stumpwm login start
       #+header: :results verbatim
      #+begin_src shell :tangle "/sudo::/home/revolt/.xinitrc"
	! xrandr --setprovideroutputsource modesetting NVIDIA-0
	! xrandr --auto
	xrandr --dpi 100


	[[ -f ~/.Xresources ]] && xrdb -merge -I$HOME ~/.Xresources

	! load xterm  setting
	! xrdb -I$HOME "/.Xresources"

	exec /usr/bin/stumpwm
      #+end_src
**** Stumpwm config
     #+header: :tangle "~/.stumpwm.d/init.lisp"
     #+begin_src common-lisp 
       ;; -*-Emacs-lisp-*-
       ;;change cursor from defalut X shape
       (stumpwm:run-shell-command "xsetroot -cursor_name left_ptr")

       (stumpwm:run-shell-command "v2ray -config /etc/v2ray/config.json")

       ;; default start input methods
       (stumpwm:run-shell-command "fcitx-autostart")

       (stumpwm:run-shell-command "xsetroot -cursor_name left_ptr")

       ;; Change stumpwm prefix key to Super key
       (set-prefix-key (kbd "s-RET"))

       ;; Binging keys
       (stumpwm:define-key stumpwm:*root-map* (stumpwm:kbd "C-z") "echo NICE,WELL DONE")

       ;; if you want to reload stumpwm,could type =s-ERT ;= then input =loadrc=

       ;; Create myself own keymap.

       (defvar *my-frame-bindings*
	 (let ((m (stumpwm:make-sparse-keymap)))
	   (stumpwm:define-key m (stumpwm:kbd "c") "curframe")
	   (Stumpwm:Define-key m (stumpwm:kbd "M-b") "move-focus left")
	   (stumpwm:define-key m (stumpwm:kbd "f") "exec firefox")
	   (stumpwm:define-key m (stumpwm:kbd "g") "exec google-chrome-stable")
	   (stumpwm:define-key m (stumpwm:kbd "p") "exec flameshot gui")
	   (stumpwm:define-key m (stumpwm:kbd "r") "loadrc")
	   (stumpwm:define-key m (stumpwm:kbd "l") "reload")
	   m
	   ))

       (stumpwm:define-key stumpwm:*root-map* (stumpwm:kbd "RET") '*my-frame-bindings*)

       ;; 2-modifier
       ;; slove "Super" key not work.
       ;;(stumpwm:run-shell-command "feh --bg-scale ~/.emacs.d/image-dired/bk_image/bizhi.png")

       ;; test Hyper command
       (define-key *top-map* (kbd "H-RET") "fullscreen")
       (define-key *top-map* (kbd "H-Left") "gprev")
       (define-key *top-map* (kbd "H-Right") "gnext")
       (define-key *top-map* (kbd "H-TAB") "other")


       (define-key ** (kbd "H-TAB") "other")
       ;; command
       (define-key *root-map* (kbd "[") "exchange-direction left")
       (define-key *root-map* (kbd "]") "exchange-direction right")

       ;; writing Commands
       (defcommand here_we_are(name location)
	 ((:string "Enter your name:")
	  (:string "Enter your location:")
	  )					;
	 (message "~a,now your location is ~a" name location)
	 )

       (define-key *root-map* (kbd "L") "here_we_are revolt")

       ;; define emacs
       (defcommand emacs () ()  "run-or-raise emacs"  (run-or-raise "emacsclient -ca emacs" '(:class "Emacs" :title "Emacs")))
       (define-key *root-map* (kbd "e") "emacs")
       ;; (stumpwm:run-shell-command "emacs --daemon")
       ;;(stumpwm:run-shell-command "pulseaudio --start")

       (setf *mode-line-timeout* 1)

       ;; turn on/off the mode line for the current head only
       (stumpwm:toggle-mode-line (stumpwm:current-screen)
				 (stumpwm:current-head))

       ;; disable startup message.
       (setf *startup-message* nil)

       ;; default border style
       (setq *window-border-style* :thin)

       ;; test stumpwm modules
       (setf *module-dir* "~/.stumpwm.d/modules/")

       (init-load-path *module-dir*)

       (load-module "cpu")
       (load-module "net")
       (load-module "surfraw")
       (load-module "command-history")

       ;; Usage: https://quickref.common-lisp.net/truetype-clx.html
       ;; Source: https://github.com/madand/clx-truetype.git

       ;;(load-module "clx-truetype")

       (ql:quickload :clx-truetype)
       ;; setting default font
       (load-module "ttf-fonts")

       ;; slove font question
       ;; https://github.com/stumpwm/stumpwm/issues/350

       ;; cache fonts
       (xft:cache-fonts)

       (set-font
	(make-instance 'xft:font :family "Iosevka Fixed SS14" :subfamily "Regular" :size 12))

       ;;(load-module "screenshot")
       ;; Set font for messages and modeline

       ;;(set-font (make-instance 'xft:font :family "DejaVu Sans Mono" :subfamily "Book" :size 12))""""'))
       ;; display the windows list and the current date on the modeline.
       (setf stumpwm:*screen-mode-line-format*
	     (list "%v | CG: %n%u | %C | %l"

		   "^>"
		   " ^7*"
		   '(:eval (stumpwm:run-shell-command "date" t))
		   ))

       (setf stumpwm:*mode-line-background-color* "#FBD7CF")

       (enable-mode-line (current-screen) (current-head) t)
       ;;(define-key *root-map* (kbd "C-f f") "exec firefox")
       ;; change Window focus on mouse click
       ;;(setf *mouse-focus-policy* :click)

       (setf *window-format* "%m%n%s%c")
       (setf *group-format* "%n%s%t")

       ;; setting time format
       ;; (setf *time-modeline-string* "%a %b %e %k:%M") 

       ;; test
     #+end_src
    
**** Stumpwm login manager

     #+begin_src shell :tangle "/sudo::/usr/share/xsessions/stumpwm.desktop"
       [Desktop Entry]
       Encoding=UTF-8
       Name=StumpWM
       Comment=Login using StumpWM
       Exec=/usr/bin/stumpwm
       Type=XSession
     #+end_src
    
*** Gif record tools - byzanz record

    [[file:~/.emacs.d/lisp/utils/evil/init-evil::;; generate GIF image in current folder][See here]]

** Shell setting
*** Zsh setting
**** Use key short
     #+begin_example
       - C-r :: search history command
       - r :: remake the last command

       # install bat replace cat
       # bat xx_file
     #+end_example
**** Check default shell
     #+begin_src shell
       echo $SHELL
     #+end_src

     #+RESULTS:
     : /usr/bin/zsh

**** Setting Default shell
     #+begin_src shell :dir "/sudo::" :results verbatim
       chsh -s /bin/zsh
     #+end_src

     #+RESULTS:
     : Changing shell for root.
     : Shell changed.

     #+header: :results verbatim :exports both
     #+begin_src shell :tangle "/sudo::/home/revolt/.zshrc"
       # If you come from bash you might have to change your $PATH.
       export PATH=$HOME/bin:/usr/local/bin:$PATH

       # Path to your oh-my-zsh installation.
       export ZSH="/home/revolt/.oh-my-zsh"

       # Set name of the theme to load --- if set to "random", it will
       # load a rndom theme each time oh-my-zsh is loaded, in which case,
       # to know which specific one was loaded, run: echo $RANDOM_THEME
       # See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
       ZSH_THEME="robbyrussell"

       # Set list of themes to pick from when loading at random
       # Setting this variable when ZSH_THEME=random will cause zsh to load
       # a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
       # If set to an empty array, this variable will have no effect.
       # ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

       # Uncomment the following line to use case-sensitive completion.
       # CASE_SENSITIVE="true"

       # Uncomment the following line to use hyphen-insensitive completion.
       # Case-sensitive completion must be off. _ and - will be interchangeable.
       # HYPHEN_INSENSITIVE="true"

       # Uncomment the following line to disable bi-weekly auto-update checks.
       # DISABLE_AUTO_UPDATE="true"

       # Uncomment the following line to automatically update without prompting.
       # DISABLE_UPDATE_PROMPT="true"

       # Uncomment the following line to change how often to auto-update (in days).
       # export UPDATE_ZSH_DAYS=13

       # Uncomment the following line if pasting URLs and other text is messed up.
       # DISABLE_MAGIC_FUNCTIONS=true

       # Uncomment the following line to disable colors in ls.
       # DISABLE_LS_COLORS="true"

       # Uncomment the following line to disable auto-setting terminal title.
       # DISABLE_AUTO_TITLE="true"

       # Uncomment the following line to enable command auto-correction.
       # ENABLE_CORRECTION="true"

       # Uncomment the following line to display red dots whilst waiting for completion.
       # COMPLETION_WAITING_DOTS="true"

       # Uncomment the following line if you want to disable marking untracked files
       # under VCS as dirty. This makes repository status check for large repositories
       # much, much faster.
       # DISABLE_UNTRACKED_FILES_DIRTY="true"

       # Uncomment the following line if you want to change the command execution time
       # stamp shown in the history command output.
       # You can set one of the optional three formats:
       # "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
       # or set a custom format using the strftime function format specifications,
       # see 'man strftime' for details.
       HIST_STAMPS="mm/dd/yyyy"

       # Would you like to use another custom folder than $ZSH/custom?
       # ZSH_CUSTOM=/path/to/new-custom-folder

       # Which plugins would you like to load?
       # Standard plugins can be found in ~/.oh-my-zsh/plugins/*
       # Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
       # Example format: plugins=(rails git textmate ruby lighthouse)
       # Add wisely, as too many plugins slow down shell startup.
       plugins=(
	   git
	   autojump
	   zsh-autosuggestions
	   zsh-syntax-highlighting
       )

       # autojump config
       [[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && . ~/.autojump/etc/profile.d/autojump.sh

       # autojump binding key
       bindkey ',' autosuggest-accept

       source $ZSH/oh-my-zsh.sh

       # User configuration

       export MANPATH="/usr/local/man:$MANPATH"

       # You may need to manually set your language environment
       export LANG=en_US.UTF-8

       # Preferred editor for local and remote sessions
       if [[ -n $SSH_CONNECTION ]]; then
	   export EDITOR='vim'
       else
	   export EDITOR='mvim'
       fi

       # Compilation flags
       export ARCHFLAGS="-arch x86_64"

       # set ENV

       #Set personal aliases, overriding those provided by oh-my-zsh libs,
       # plugins, and themes. Aliases can be placed here, though oh-my-zsh
       # users are encouraged to define aliases within the ZSH_CUSTOM folder.
       # For a full list of active aliases, run `alias`.
       #
       # Example aliases
       # alias zshconfig="mate ~/.zshrc"
       # alias ohmyzsh="mate ~/.oh-my-zsh"

       # trash-cli
       alias rm='trash-put'
       alias rm.list='trash-list'
       alias rm.restore='trash-restore'
       alias rm.delete='trash-rm'
       alias rm.empty='trash-empty'
       alias rm.origin='/bin/rm -fr'

       # emacs alias setting
       alias et="emacsclient -t"
       alias etstat="systemctl --user enable --now emacs"
       alias etstop="systemctl --user stop emacs"
       alias etrestat="systemctl --user restart emacs"

       # proxy settings
       # set http_proxy=http://127.0.0.1:1080
       # set https_proxy=http://127.0.0.1:1080

       # Note the source command must be at the end of .zshrc
       source "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

       # set primary monitor
       mons -e right
     #+end_src

** System setting
   
   **Tips**
   
   1. How to restart X server?
      
      =sudo systemctl restart display-manager=, i use sddm,so just run
      command =sudo systemctl restart sddm=. now we could test it.
   
*** X resources
    
    if =.xinitrc= not working,you could directly change
    =/usr/share/X11/app-defaults= files.
    
    sddm login after not load =~/.xinitrc= file, very 
**** Basic concept
     Xresource is a user-level configuration dotfile,typically located
     at =~/.Xresources=. It can be used to set =X resources=, which
     can configuration parameters for X client applications.
     
     Among other things they can be used:

     - set DPI,anti-aliasing,
     - change the Xcursor theme
     - theme =XscreenSaver=
     - configure low-level X applications like:
       xorg-xclock,xpdf,rxvt-unicode.
**** Usage
***** Load resource file
      
      Resources are stored in the X server,so have to only be read
      once.

      - Load a resource file(Such as the conventional
        =.Xresources=),replacing any current settings:
	
	#+BEGIN_EXAMPLE
	  xrdb ~/.Xresources
	#+END_EXAMPLE

      - Load a resource file,and merge with current settings:
	
	#+BEGIN_EXAMPLE
	  xrdb -merge ~/.Xresources
	#+END_EXAMPLE

      - Note :: Most Display managers load the =~/.Xresources= file on
        login.
	
	The older =~/.Xdefaults= file is read when an X11 program
        starts, but only if xrdb has not been used in the current
        session.

***** Xinitrc
      
      if you are using a copy of the default =xinitrc= as your =.xinitrc=
      it already merges =~.Xresource=.
      
      if you are using a custom =.xinitrc= add the following line:
      
      #+BEGIN_SRC shell :dir "/sudo::/home/revolt/.xinitrc"
	[[ -f ~/.Xresources ]] && xrdb -merge -I$HOME ~/.Xresources
      #+END_SRC

***** Check Default settings
      
      The default settings in =/usr/share/X11/app-defaults/=,we cat
      check out.
      
      #+BEGIN_SRC shell :dir "/usr/share/X11/app-defaults/" :results verbatim
	ls -ll
      #+END_SRC

      To see the currently loaded resources:
      
      #+BEGIN_SRC shell :results silent
	xrdb -query -all
      #+END_SRC
***** Xresource syntax
      
      #+BEGIN_EXAMPLE
	name.Class.resource: value
      #+END_EXAMPLE
      
      - text demo:
	
	#+BEGIN_SRC shell :tangle "/sudo::/home/revolt/.Xresources"
	  xscreensaver.Dialog.headingFont: -*-fixed-bold-r-*-*-*-100-*-*-*-*-iso8859-1
	#+END_SRC
	
      - Wildcard matching
	=?= and =*= can be used as wildcards,making it easy to write
        a single rule that can be applied to many different
        applications or elements.
	  
	=?= is used to match any single component name,while =*= is
        used to represent any number of intervening components
        including none.
	  
	so,if you want to apply the same font to all programs (not
        just XScreenSaver) the contain the class name =Dialog= which
        contains the resource name =headingFont=,you could write:
	  
	#+BEGIN_EXAMPLE
	  ?.Dialog.headingFont:     -*-fixed-bold-r-*-*-*-100-*-*-*-*-iso8859-1
	#+END_EXAMPLE

	if you want to apply this same rule to all programs that
        contain the resource =headingFont=,regardless of its class,
        you could write:
	  
	#+BEGIN_EXAMPLE
	  ,*headingFont:    -*-fixed-bold-r-*-*-*-100-*-*-*-*-iso8859-1
	#+END_EXAMPLE
	  
      - include files
	
        #+begin_EXAMPLE :dir "/sudo::/home/revolt/.Xresources"
	  #include ".Xresources.d/xterm"
	#+end_EXAMPLE

      - reload file

        #+begin_EXAMPLE :dir "/sudo::/home/revolt/.xinitrc"
	  xrdb -I$HOME ~/.Xresources
	#+END_EXAMPLE

      - get resource values
	
	#+BEGIN_SRC shell :results verbatim
	  xgetres XTerm.vt100.faceName
	#+END_SRC

	#+RESULTS:
	: Hack:style=Regular:size=9:antialias=True:pixelsize=12

**** Modules
     
***** reload X resource

      #+begin_src shell :dir "/sudo::/home/revolt/.xinitrc"
	xrdb -I$HOME ~/.Xresources
      #+END_SRC

***** integrate module

      #+begin_src shell :tangle "/sudo::/home/revolt/.Xresources"
	#include ".Xresources.d/xterm"
      #+end_src

***** Xterm
      
      - check default X resource dir is or not exist

	#+BEGIN_SRC shell :dir "/sudo::/home/revolt/" :results verbatim :cache yes
	  #! /bin/bash
	  DIR = ".Xresource.d"

	  if [ -d "$DIR"]; then
	      echo "The X resource DIR alerday existed!"
	  else
	      mkdir ".Xresources.d"
	  fi
	#+END_SRC

	#+RESULTS[74d49d4d5ae5a796583ddcb28c682fb989c32035]:
	: The X resource DIR alerday existed!

      - insert Xterm settings

	#+begin_src shell :tangle "/sudo::/home/revolt/.Xresources.d/xterm"
	  !support chinese fonts
	  !中文测试
	  XTerm.vt100.faceName: Hack:style=Regular:size=12:antialias=True:pixelsize=16
	  XTerm.vt100.faceNameDoublesize: Wenquanyi Zen Hei:style=Regular,Bold,Italic:size=10:antialias=True:pixelsize=12
	  XTerm*font: *-fixed-*-*-*-12-*
	  XTerm*scaleHeight: 1.01
	  XTerm*locale: zh_CN.UTF-8

	  !backrgound color settings
	  XTerm*foreground: white
	  XTerm*background: black

	  !use mouse select text color is yellow,not evil select color,so sadness.
	  !about Xterm select,you can see here: https://jonasjacek.github.io/colors/

	  XTerm*highlightColor: yellow
	  XTerm*highlightTextColor: yellow
	  XTerm*highlightColorMode: true
	  XTerm*cursorColor: LightGoldenrod3
	  XTerm*pointerShape: arrow
	  XTerm*pointerColor: blue

	  !init window size
	  XTerm*geometry:100x32

	  !input method
	  XTerm*inputMethod: fcitx

	  !dynamic color
	  XTerm*dynamicColors:true

	  !xterm M key configuration
	  XTerm*metaSendsEscape: true

	  !TERM Environmental variable			 
	  XTerm*termName: xterm-256color

	  !Ensure that your locale is set up for UTF-8.you may need to force xterm to more strictly follow you locale by setting.
	  XTerm.vt100.locale: true


	  !Make 'Alt' key behave as on other terminal emulators
	  XTerm.vt100.metaSendsEscape: true

	  !Fix the backspace key, This breaks the Ctrl+H key combination on Emacs. now fix it.
	  XTerm.vt100.backarrowKey: false
	  XTerm.ttyModes: erase ^?


	  !key binding
	  !#override indicates that these bindings should override any existing ones
	  !Each binding must be separated by the escape sequence \n. If you want
	  !to insert a literal newline, it also needs to be escaped (hence \n\).)

	  !鼠标左键CLICK，即可向浏览器粘贴.
	  !从浏览器往XTERM中粘贴,C-S t.或者Linux自带的C-;

	  !Xterm could copy clipboard
	  XTerm*selectToClipboard: true

	  !Close Xterm fullscreen
	  XTerm.fullscreen: never

	  !下面是Xterm自定义键
	  ,*VT100*translations:      #override \n\
	      Ctrl Shift <Key>C:  copy-selection(SELECT) \n\
		   Ctrl Shift <Key>V:  insert-selection(CLIPBOARD)

	      !Scrolling, i dont want to fix it.Cause I use Emacs evil mode.

	      !enable Xterm Menus
	      XTerm.vt100.geometry: 80x32
	#+end_src

*** Xmodmap

    I need Super key and Hyper key.

**** How to know what is super key?
     
     #+header: :results verbatim
     #+begin_src shell
       xmodmap -pm
     #+end_src

     #+RESULTS:
     #+begin_example
     xmodmap:  up to 3 keys per modifier, (keycodes in parentheses):

     shift       Shift_L (0x32),  Shift_R (0x3e)
     lock        Caps_Lock (0x42)
     control     Control_L (0x25),  Control_R (0x69)
     mod1        Alt_L (0x40),  Super_R (0x6c),  Meta_L (0xcd)
     mod2        Num_Lock (0x4d)
     mod3      
     mod4        Super_L (0x85),  Super_L (0xce)
     mod5        ISO_Level3_Shift (0x5c),  Mode_switch (0xcb)

     #+end_example

     now,run shell command =xev=,click =Super_L= key,show the content
     of the following is:
    
     #+begin_example
       KeyRelease event, serial 37, synthetic NO, window 0x4000001,
       root 0x75, subw 0x0, time 2014984514, (70,-18), root:(82,60),
       state 0   x50, keycode 115 (keysym 0xffeb, Super_L), same_screen YES,
       XLookupString gives 0 bytes: 
       XFilterEvent returns: False
     #+end_example

     you will see,Keycode is 115. but my Super_L keycode is 133,Super_R
     keycode is 108.
**** check Hyper key's KeyCodes

     #+begin_src shell :results verbatim
       xmodmap -pke | egrep '(Hyper|Super)'
     #+end_src

**** maintain xmodmap setting

     cause we no SuperL and Super_R,so we could run the following
     xmodmap commands add:
     
     - check keycode 
       1. =ISO_Level3_Shift=  ==> 108
       2. =Ctrl_L= ==> 37
       3. =Caps_Lock= ==> 64
	 
     #+header: :tangle "/sudo::/home/reolt/.Xmodmap"
     #+begin_src shell 
       clear mod4
       add mod4 = Super_L
       remove Lock = Caps_Lock
       remove Control = Control_L

       keysym Control_L = Caps_Lock
       keysym Caps_Lock = Control_L
       keysym Alt_R = Caps_lock

       add lock = caps_lock
       add control = control_l
       clear mod5
       add mod5 = hyper_l
     #+end_src

*** Input methods setting
    
    Could will variables add to your X11 session.Most of display
    manager will source =~/.xprofile= for X11 Session.

    The syntax of =~/.xprofile= file may depend on the specific
    display manager and your login shell.
    
    
    #+BEGIN_SRC shell
      # ~/.xprofile
      # --------------------------------------------------
      export GTK_IM_MODULE=fcitx
      export QT_IM_MODULE=fcitx
      export XMODIFIERS=@im=fcitx
    #+END_SRC

    For SLiM or =startx= users,they do not source =~/.xprofile=,but
    instead run =~/.xinitrc= to start your X11 Session.Add the export
    line to your =~/.xinitrc= before the =exec YOUR_WM= line:
    
    #+BEGIN_SRC shell :dir "/sudo::/home/revolt/.xinitrc"
      export GTK_IM_MODULE=fcitx
      export QT_IM_MODULE=fcitx
      export XMODIFIERS=@im=fcitx
      sleep 1 && fcitx &
    #+END_SRC
    
    but not working for me.

    - another methods fix the question:
    
      1.copy the file =/etc/xdg/autostart/fcitx-autostart.desktop= into
      =/.config/autostart/= dir.
      
      2.and adjust fcitx desktop setting, =configure-Addon
      Config-(UI)Classic-Font= is Chinese,for example: =wqy-zenhei=.
      
      3.set ~export LANG= zh_CN.UTF-8~ in =.zshrc=, just run =source
      ~/.zshrc=

      that have could slove Chinese candicate word error question.

    - check fcitx config quesiton
      
      just run =fcitx-diagnose=, that will print fcitx current config
      file.

    - config current fcitx input methods
      
      just run =fcitx-configtool=,that could adjust fcitx config.

    - auto start fcitx input methods
      
      run =fcitx-autostart=

**** Chinese Input methods

     #+begin_src shell :dir "/sudo::/":results verbatim
       sudo pacman -S --noconfirm fcitx-im fcitx-configtool
     #+end_src
   
     - =C-S f= 繁体切换
     - xterm 下可以设置输入法与中文编码，以便于显示中文，和使用 =C-;= 插
       入复制的东西。


     貌似我并不需要这东西。

***** COMMENT fcitx-rime

      - 默认使用简体

        #+begin_src yaml :tangle "/sudo::/home/revolt/.config/fcitx/rime/revolt.custom.yaml" :results verbatim
	    patch:

	      switches: # 注意缩进

	      - name: ascii_mode
		reset: 0                # reset 0 的作用是当从其他输入法切换到本输入法重设为指定状态
		states: [ 中文, 西文 ]   # 选择输入方案后通常需要立即输入中文，故重设 ascii_mode = 0

		- name: full_shape
		  states: [ 半角, 全角 ]   # 而全／半角则可沿用之前方案的用法。

		  - name: simplification
		    reset: 1                # 增加这一行：默认启用「繁→簡」转换。
		    states: [ 漢字, 汉字 ]
	#+end_src
      
      - 配置模糊音

        #+begin_src yaml :tangle "/sudo::/home/revolt/.config/fcitx/rime/default.custom.yaml" :results verbatim
	    patch:

	      "menu/page_size": 10                           # default select word number

	      'speller/algebra':
		- erase/^xx$/                                # 第一行保留
		# 模糊音定义
		- derive/^([zcs])h/$1/                       # zh,ch,sh => z,c,s
		- derive/^([zcs])([^h])/$1h$2/               # zh,ch,sh => z,c,s
		- derive/^n/l/                               # n =>l
		- derive/^l/n/                               # l=> n
	#+end_src

      - 添加搜狗词库
*** COMMENT read xinitrc setting
    #+header: :results verbatim
    #+begin_src shell
      cat ~/.xinitrc 
    #+end_src

    #+RESULTS:
    : xrdb -I$HOME ~/.Xresources
    : 
*** Locale set
    
    ref link: [[https://www.cnblogs.com/xlmeng1988/archive/2013/01/16/locale.html][locale description]].

    #+begin_src shell :results verbatim :tangle "/sudo::/etc/locale.conf"
      LC_CTYPE=zh_CN.UTF-8
      LANG=en_US.UTF-8
    #+end_src

*** COMMENT Computer driver identify and install
***** check your laptop what's kinds of graphics card
      
      #+begin_src shell :results verbatim :exports results
	lspci -k | grep -A 2 -E "(VGA|3D)"
      #+end_src

      #+RESULTS:
      : 00:02.0 VGA compatible controller: Intel Corporation Device 3e90
      : 	DeviceName: Onboard - Video
      : 	Subsystem: CLEVO/KAPOK Computer Device 55a1
      : --
      : 01:00.0 VGA compatible controller: NVIDIA Corporation GP107M [GeForce GTX 1050 Mobile] (rev a1)
      : 	Subsystem: CLEVO/KAPOK Computer Device 55a1
      : 	Kernel driver in use: nvidia

	
      - install nvidia drive
	#+begin_example
	  sudo pacman -S --noconfirm nvidia
	#+end_example

	#+header: :dir "/sudo::/usr/etc/X11/xorg.conf.d/"
	#+begin_src shell :results verbatim
	  ls -ll
	#+end_src

      - Note

	1.For NVIDIA Optimus enabled laptop which uses an integrated
        video combined with a dedicated GPU.So more care about
        the [[*NVIDIA Optimus][NVIDIA Optimus]].

***** now checkout your nvidia graphic card version
      [[https://nouveau.freedesktop.org/wiki/CodeNames/][Check your graphic card version]]
      
      - GTX 1050 --> NV137(GP107)
	
      #+begin_example
	sudo pacman -S lib32-nvidia-utils lib32-nvidia-libgl lib32-mesa-demos libva-vdpau-driver
      #+end_example
      
      1. install nvidia setting
	 #+begin_example
	  sudo pacman -S nvidia-settings
	 #+end_example
      2. persistence enable nvidia service
	 #+begin_example
	    systemctl enable nvidia-persistenced.service
	  #+end_example
***** download nvidia driver	
      https://www.nvidia.com/Download/driverResults.aspx/159360/en-us
***** forbidden nouveau
      #+header: :dir "/sudo::/etc/modprobe.d/"
      #+begin_src shell :results silent
	echo "blacklist nouveau" >> nouveau_blacklist.conf
	echo "options nouveau modeset=0" >> blacklist-nvidia-nouveau.conf
      #+end_src
***** generate nvidia X11 config file
      #+begin_example
	sudo nvidia-xconfig
	# generate file in /etc/X11/xorg.conf
      #+end_example
***** check nvidia use state 
      #+begin_src shell :results verbatim
	nvidia-smi
      #+end_src

      #+RESULTS:

***** NVIDIA Optimus
      Install =optimus manager= && =optimus-manager-qt=.
*** COMMENT SDDM
**** Configuration
     The default configuration file for SDDM can be found at
     =/usr/lib/sddm/sddm.conf.d/default.conf=.
     
     For any changes,create configuration files in =/etc/sddm.conf.d/=
     
     #+header: :dir "/usr/lib/sddm/sddm.conf.d/" :results verbatim
     #+begin_src shell
       cat default.conf
     #+end_src

     #+RESULTS:
     #+begin_example
     [Autologin]
     # Whether sddm should automatically log back into sessions when they exit
     Relogin=false

     # Name of session file for autologin session (if empty try last logged in)
     Session=

     # Username for autologin session
     User=


     [General]
     # Halt command
     HaltCommand=/usr/bin/systemctl poweroff

     # Input method module
     InputMethod=

     # Comma-separated list of Linux namespaces for user session to enter
     Namespaces=

     # Initial NumLock state. Can be on, off or none.
     # If property is set to none, numlock won't be changed
     # NOTE: Currently ignored if autologin is enabled.
     Numlock=none

     # Reboot command
     RebootCommand=/usr/bin/systemctl reboot


     [Theme]
     # Current theme name
     Current=

     # Cursor theme used in the greeter
     CursorTheme=

     # Number of users to use as threshold
     # above which avatars are disabled
     # unless explicitly enabled with EnableAvatars
     DisableAvatarsThreshold=7

     # Enable display of custom user avatars
     EnableAvatars=true

     # Global directory for user avatars
     # The files should be named <username>.face.icon
     FacesDir=/usr/share/sddm/faces

     # Theme directory path
     ThemeDir=/usr/share/sddm/themes


     [Users]
     # Default $PATH for logged in users
     DefaultPath=/usr/local/sbin:/usr/local/bin:/usr/bin

     # Comma-separated list of shells.
     # Users with these shells as their default won't be listed
     HideShells=

     # Comma-separated list of users that should not be listed
     HideUsers=

     # Maximum user id for displayed users
     MaximumUid=60000

     # Minimum user id for displayed users
     MinimumUid=1000

     # Remember the session of the last successfully logged in user
     RememberLastSession=true

     # Remember the last successfully logged in user
     RememberLastUser=true

     # When logging in as the same user twice, restore the original session, rather than create a new one
     ReuseSession=false


     [Wayland]
     # Enable Qt's automatic high-DPI scaling
     EnableHiDPI=false

     # Path to a script to execute when starting the desktop session
     SessionCommand=/usr/share/sddm/scripts/wayland-session

     # Directory containing available Wayland sessions
     SessionDir=/usr/share/wayland-sessions

     # Path to the user session log file
     SessionLogFile=.local/share/sddm/wayland-session.log


     [X11]
     # Path to a script to execute when starting the display server
     DisplayCommand=/usr/share/sddm/scripts/Xsetup

     # Path to a script to execute when stopping the display server
     DisplayStopCommand=/usr/share/sddm/scripts/Xstop

     # Enable Qt's automatic high-DPI scaling
     EnableHiDPI=false

     # The lowest virtual terminal number that will be used.
     MinimumVT=1

     # Arguments passed to the X server invocation
     ServerArguments=-nolisten tcp

     # Path to X server binary
     ServerPath=/usr/bin/X

     # Path to a script to execute when starting the desktop session
     SessionCommand=/usr/share/sddm/scripts/Xsession

     # Directory containing available X sessions
     SessionDir=/usr/share/xsessions

     # Path to the user session log file
     SessionLogFile=.local/share/sddm/xorg-session.log

     # Path to the Xauthority file
     UserAuthFile=.Xauthority

     # Path to xauth binary
     XauthPath=/usr/bin/xauth

     # Path to Xephyr binary
     XephyrPath=/usr/bin/Xephyr


     #+end_example

**** Autologin
     
     check avaliable session types.

     #+header: :dir "/usr/share/xsessions/" :results verbatim
     #+begin_src shell
       ls
     #+end_src

     #+RESULTS:
     : plasma.desktop

     setting automatic login through configuration file:
     
     #+header: :tangle "/sudo::/etc/sddm.conf.d/autologin.conf"
     #+begin_src shell
       [Autologin]
       User = revolt
       Session = plasma.desktop
     #+end_src
**** intergrate with nvidia graphic card

     #+begin_src shell :tangle "/sudo::/usr/share/sddm/scripts/Xsetup"
       xrandr --setprovideroutputsource modesetting NVIDIA-0
       xrandr --auto
     #+end_src
*** Grub setting
**** check package is or not exist

     #+BEGIN_SRC shell :dir "/sudo::/" :results verbatim
       pacman -Q os-prober ntfs-3g
     #+END_SRC

     #+RESULTS:
     : os-prober 1.77-1
     : ntfs-3g 2017.3.23-4
**** regenerate grub config file

     #+BEGIN_SRC shell :dir "/sudo::/" :results verbatim
       grub-mkconfig -o /boot/grub/grub.cfg
     #+END_SRC

     #+RESULTS
**** config grub themes
     
     install a grub themes,it will auto config.

     link: https://github.com/vinceliuice/grub2-themes 
** System Sync
   
*** COMMENT Resilio Sync
    
    去中心化的杰作。但是还没有到那个级别,所以就先不需要了。

*** synching
    
    用来同步Org document.
    
*** sync

    用来同步系统
    
** A kinds of X Setting 
*** COMMENT X serve kinds of setting
    :PROPERTIES:
    :header-args: :results verbatim :exports none
    :END:
    - show X setting
      #+header: :results verbatim
      #+begin_src shell
	cat ~/.xinitrc
      #+end_src

      #+RESULTS:
      : xrandr --setprovideroutputsource modesetting NVIDIA-0
      : xrandr --auto
      : xrandr --dpi 100
      : 
      : !load xterm  setting
      : xrdb -merge -I$HOME "/.Xresources"
      : /usr/bin/stumpwm
      : 
      : 
** Emacs
*** Emacs Daemon
    #+header: :dir "/sudo::/home/revolt/.config/systemd/user/default.target.wants"
    #+begin_src shell :results verbatim :cache yes
      cat emacs.service
    #+end_src

    #+RESULTS[f766dd79f4f932d1d9fedbec558e3c62c2ecf325]:
    #+begin_example
    [Unit]
    Description=Emacs text editor
    Documentation=info:emacs man:emacs(1) https://gnu.org/software/emacs/

    [Service]
    Type=notify
    ExecStart=/usr/local/bin/emacs --fg-daemon
    ExecStop=/usr/local/bin/emacsclient --eval "(kill-emacs)"
    # The location of the SSH auth socket varies by distribution, and some
    # set it from PAM, so don't override by default.
    # Environment=SSH_AUTH_SOCK=%t/keyring/ssh
    Restart=on-failure

    [Install]
    WantedBy=default.target
    #+end_example
*** Emacs music 
    
    - first search ~Music Player Daemon(MPD)~ in Arch Wiki.
*** Emacs email system
**** TODO Gnus

***** Introduction
      
      - What is the Gnus?
	
	Gnus is an Emacs package for reading e-mail and Usenet
        news(and more other thing).

***** Fundamental configuration
      
      - create gnus configuration file.
	
** Basic Setting
*** [[https://wiki.archlinux.org/index.php/environment_variables][Environment variables]] 

    - The detection value of the current environment variables
      
      #+begin_src shell :results verbatim
	printenv | grep "XDG"
      #+end_src

      #+RESULTS:
      : XDG_DATA_DIRS=/home/revolt/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share
      : XDG_RUNTIME_DIR=/run/user/1000
      : XDG_SESSION_CLASS=user
      : XDG_CURRENT_DESKTOP=GNOME
      : XDG_SESSION_TYPE=x11
      : XDG_SESSION_DESKTOP=gnome
      : XDG_MENU_PREFIX=gnome-

*** COMMENT config pacman mirrors
**** use archlinux offical mirrors

     #+begin_src shell :dir "/sudo::/":exports all :results silent
       sudo wget -O /etc/pacman.d/mirrorlist https://www.archlinux.org/mirrorlist/all/
     #+end_src

     #+begin_src shell :dir "/sudo::/" :results list
       bat /etc/pacman.d/mirrorlist 
     #+end_src

**** COMMENT force overwrite pacman mirrors address
     #+begin_src shell :dir "/sudo::/":results verbatim :tangle "/etc/pacman.d/mirrorlist"
       ##
       ## Arch Linux repository mirrorlist
       ## Filtered by mirror score from mirror status page
       ##
       #
       Server = http://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch
     #+end_src

     #+RESULTS:

*** COMMENT Pacman 

    install pacman package manager: yay.
    
    #+BEGIN_EXAMPLE
    git clone https://aur.archlinux.org/yay.git
    cd yay
    makepkg -si
    #+END_EXAMPLE
*** COMMENT List of installed packages

    #+begin_src shell :results verbatim :cache yes
      pacman -Qqe
    #+end_src

    #+RESULTS:
    #+begin_example
    akonadi-calendar-tools
    akonadi-import-wizard
    akonadiconsole
    akregator
    alsa-utils
    android-tools
    ark
    artikulate
    aspell
    audiocd-kio
    autoconf
    autojump
    automake
    baobab
    base
    bat
    bbswitch
    binutils
    bison
    blinken
    bomber
    bovo
    byzanz
    calibre
    cantor
    cervisia
    cheese
    chrome-gnome-shell
    cl-zpb-ttf
    dconf-editor
    dhcpcd
    dialog
    dolphin
    dolphin-plugins
    dragon
    efibootmgr
    elisa
    eog
    epiphany
    evince
    fakeroot
    fcitx
    fcitx-cloudpinyin
    fcitx-configtool
    fcitx-googlepinyin
    fcitx-qt5
    fcitx-rime
    ffmpegthumbs
    file
    file-roller
    filelight
    findutils
    firefox
    flameshot
    flex
    gawk
    gcc
    gdm
    gedit
    gettext
    git
    gnome-backgrounds
    gnome-books
    gnome-boxes
    gnome-calculator
    gnome-calendar
    gnome-characters
    gnome-clocks
    gnome-color-manager
    gnome-contacts
    gnome-control-center
    gnome-disk-utility
    gnome-documents
    gnome-font-viewer
    gnome-getting-started-docs
    gnome-keyring
    gnome-logs
    gnome-maps
    gnome-menus
    gnome-music
    gnome-photos
    gnome-remote-desktop
    gnome-screensaver
    gnome-screenshot
    gnome-session
    gnome-settings-daemon
    gnome-shell
    gnome-shell-extensions
    gnome-software
    gnome-system-monitor
    gnome-terminal
    gnome-themes-extra
    gnome-tweaks
    gnome-user-docs
    gnome-user-share
    gnome-video-effects
    gnome-weather
    google-chrome
    granatier
    grantlee-editor
    grep
    grilo-plugins
    groff
    grub
    grub-theme-vimix
    gvfs-afc
    gvfs-goa
    gvfs-google
    gvfs-gphoto2
    gvfs-mtp
    gvfs-nfs
    gvfs-smb
    gwenview
    gzip
    hugo
    iw
    jq
    juk
    k3b
    kaccounts-providers
    kaddressbook
    kajongg
    kalarm
    kalgebra
    kalzium
    kamera
    kamoso
    kanagram
    kapman
    kapptemplate
    kate
    katomic
    kbackup
    kblackbox
    kblocks
    kbounce
    kbreakout
    kbruch
    kcachegrind
    kcalc
    kcharselect
    kcm-fcitx
    kcolorchooser
    kcron
    kde-dev-scripts
    kde-dev-utils
    kdebugsettings
    kdeconnect
    kdegraphics-mobipocket
    kdegraphics-thumbnailers
    kdenetwork-filesharing
    kdenlive
    kdepim-addons
    kdesdk-kioslaves
    kdesdk-thumbnailers
    kdf
    kdialog
    kdiamond
    keditbookmarks
    kfind
    kfloppy
    kfourinline
    kgeography
    kgoldrunner
    kgpg
    khangman
    khelpcenter
    kig
    kigo
    killbots
    kimagemapeditor
    kio-extras
    kipi-plugins
    kirigami-gallery
    kiriki
    kiten
    kjumpingcube
    kleopatra
    klettres
    klickety
    klines
    kmag
    kmahjongg
    kmail
    kmail-account-wizard
    kmines
    kmix
    kmousetool
    kmouth
    kmplot
    knavalbattle
    knetwalk
    knights
    knotes
    kolf
    kollision
    kolourpaint
    kompare
    konqueror
    konquest
    konsole
    kontact
    kopete
    korganizer
    kpatience
    krdc
    kreversi
    krfb
    kross-interpreters
    kruler
    kshisen
    ksirk
    ksnakeduel
    kspaceduel
    ksquares
    ksudoku
    ksystemlog
    kteatime
    ktimer
    ktouch
    ktuberling
    kturtle
    kubrick
    kwalletmanager
    kwave
    kwordquiz
    kwrite
    libtool
    linux
    linux-firmware
    lokalize
    lskat
    m4
    make
    marble
    mbox-importer
    mesa-demos
    minuet
    mons
    mosh
    mpd
    mutter
    nautilus
    ncmpcpp
    net-tools
    networkmanager
    nodejs
    npm
    ntfs-3g
    nvidia
    nvm
    okular
    opencl-nvidia
    openntpd
    optimus-manager
    optimus-manager-qt
    orca
    os-prober
    pacman
    palapeli
    pandoc
    parley
    patch
    picmi
    pim-data-exporter
    pim-sieve-editor
    pkgconf
    poxml
    print-manager
    proxychains-ng
    pulseaudio-alsa
    putty
    python-pip
    python-pyqt3d
    python-pyqtchart
    python-pyqtdatavisualization
    python-pyqtpurchasing
    python-pyqtwebengine
    qv2ray
    r
    rocs
    rygel
    sbcl
    sdcv
    sed
    shadowsocks-qt5
    simple-scan
    spectacle
    stardict
    step
    stumpwm
    sudo
    surfraw
    sushi
    svgpart
    sweeper
    syncthing
    tcsh
    telepathy-kde-accounts-kcm
    telepathy-kde-approver
    telepathy-kde-auth-handler
    telepathy-kde-call-ui
    telepathy-kde-common-internals
    telepathy-kde-contact-list
    telepathy-kde-contact-runner
    telepathy-kde-filetransfer-handler
    telepathy-kde-integration-module
    telepathy-kde-send-file
    telepathy-kde-text-ui
    texinfo
    texlive-core
    texlive-langchinese
    toilet
    tor
    totem
    trash-cli
    tree
    ttf-fira-code
    ttf-hack
    ttf-iosevka-term
    unzip
    v2ray
    vi
    vim
    vino
    w3m
    wget
    which
    wqy-bitmapfont
    wqy-microhei
    wqy-microhei-lite
    wqy-zenhei
    xdg-user-dirs-gtk
    xf86-video-intel
    xf86-video-vesa
    xgetres
    xorg-docs
    xorg-fonts-100dpi
    xorg-fonts-75dpi
    xorg-fonts-cyrillic
    xorg-fonts-misc
    xorg-fonts-type1
    xorg-iceauth
    xorg-luit
    xorg-server-devel
    xorg-server-xephyr
    xorg-server-xnest
    xorg-server-xvfb
    xorg-server-xwayland
    xorg-sessreg
    xorg-smproxy
    xorg-x11perf
    xorg-xbacklight
    xorg-xcmsdb
    xorg-xcursorgen
    xorg-xdpyinfo
    xorg-xdriinfo
    xorg-xev
    xorg-xgamma
    xorg-xhost
    xorg-xinit
    xorg-xinput
    xorg-xkbevd
    xorg-xkbutils
    xorg-xkill
    xorg-xload
    xorg-xlsatoms
    xorg-xlsclients
    xorg-xmodmap
    xorg-xpr
    xorg-xrandr
    xorg-xrefresh
    xorg-xvinfo
    xorg-xwd
    xorg-xwininfo
    xorg-xwud
    xterm
    yakuake
    yay
    yelp
    zeroconf-ioslave
    zsh
    #+end_example

*** COMMENT Check System
    #+begin_src shell :results verbatim
      df -hT
    #+end_src

    #+RESULTS:
    #+begin_example
    Filesystem     Type      Size  Used Avail Use% Mounted on
    dev            devtmpfs  3.9G     0  3.9G   0% /dev
    run            tmpfs     3.9G  2.0M  3.9G   1% /run
    /dev/sdb2      ext4      147G   24G  117G  17% /
    tmpfs          tmpfs     3.9G  429M  3.4G  11% /dev/shm
    tmpfs          tmpfs     4.0M     0  4.0M   0% /sys/fs/cgroup
    tmpfs          tmpfs     3.9G  4.7M  3.9G   1% /tmp
    /dev/sdb3      ext4       30G   12G   16G  43% /home
    /dev/sdb5      vfat     1022M  156K 1022M   1% /boot/EFI
    tmpfs          tmpfs     781M  172K  781M   1% /run/user/1000
    tmpfs          tmpfs     781M  128K  781M   1% /run/user/120
    #+end_example

*** proxy config

    当前的socks 5代理GG l，不知道啥原因，目前替代的方式就是直接在zsh里
    面的设置写入代理方式。有机会再试一试。

**** Set DNS
     
     - checkout your dns 

       #+BEGIN_SRC shell :results verbatim
	 cat /etc/resolv.conf
       #+END_SRC

       #+RESULTS:
       : # Generated by dhcpcd from enp2s0f1.dhcp
       : # /etc/resolv.conf.head can replace this line
       : nameserver 211.100.225.34
       : nameserver 219.239.26.42
       : # /etc/resolv.conf.tail can replace this line


**** V2ray setting
     
***** Install Qv2ray
      
      https://aur.archlinux.org/qv2ray.git
      
      v2ray 里面有个致命的问题：服务端的时间需要和客户端的时间保持一致。
      才可以正常运行。
     
      解决方式，让其自动校验。
     
      #+begin_example
	设置时区: sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai/etc/localtime
	安装openNTPD: sudo pacman -S openntpd
	重启openNTPD: systemctl restart openntpd
	设置开机启动: systemctl enable openntpd
      #+end_example

      **config client demo**
     
      #+BEGIN_SRC shell
	{
	    "log":{
		"access": "/var/log/v2ray/access.log",
		"error": "/var/log/v2ray/error.log",
		"loglevel": "warning"
	    },
	    "outbounds": [
		{
		    "protocol": "vmess",
		    "settings": {
			"vnext": [
			    {
				"address": "www.lyps.site",
				"port": 443,
				"users": [
				    {
					"id": "6921277a-f278-4f92-a914-3bbaac2bb7f6",
					"alterId": 13,
					"security": "auto"
				    }
				]
			    }
			]
		    }
		},
		{
		    "protocol": "freedom",
		    "settings": null,
		    "tag": "direct"
		},
		{
		    "protocol": "blackhole",
		    "settings": null,
		    "tag": "blocked"
		},
		{
		    "protocol": "dns",
		    "tag": "dns-out"
		}
	    ],
	    "inbounds": [
		{
		    "port": 1080,
		    "protocol": "socks",
		    "listen": "127.0.0.1",
		    "domainOverride": ["tls","http"],
		    "settings": {
			"auth": "noauth",
			"udp": false
		    }
		}
	    ],
	    "streamSettings": {
		"network": "ws",
		"security": "tls",
		"wsSettings": {
		    "connectionReuse": true,
		    "path": "/v2ray"
		}
	    },
	    "routing": {
		"domainStrategy": "IPOnDemand",
		"rules": [
		    {
			"type": "field",
			"inboundTag": [
			    "dns-in"
			],
			"outboundTag": "dns-out"
		    },
		    {
			"type": "field",
			"ip": [
			    "geoip:private"
			],
			"outboundTag": "blocked"
		    },
		    {
			"type": "field",
			"ip": [
			    "geoip:cn"
			],
			"outboundTag": "direct"
		    },
		    {
			"type": "field",
			"domain": [
			    "geosite:cn"
			],
			"outboundTag": "direct"
		    }
		]
	    }
	}
      #+END_SRC

      升级版本,使用一键安装脚本来进行安装即可。
     
      https://github.com/wulabing/V2Ray_ws-tls_bash_onekey.git

      **wc + websocket config**

      #+BEGIN_SRC shell
	{
	    "outbounds": [
		{
		    "mux": {
		    },
		    "protocol": "vmess",
		    "sendThrough": "0.0.0.0",
		    "settings": {
			"vnext": [
			    {
				"address": "www.lyps.site",
				"port": 443,
				"users": [
				    {
					"alterId": 13,
					"id": "6921277a-f278-4f92-a914-3bbaac2bb7f6",
					"level": 0,
					"security": "auto"
				    }
				]
			    }
			]
		    },
		    "streamSettings": {
			"dsSettings": {
			    "path": "/"
			},
			"httpSettings": {
			    "host": [
			    ],
			    "path": "/"
			},
			"kcpSettings": {
			    "congestion": false,
			    "downlinkCapacity": 20,
			    "header": {
				"type": "none"
			    },
			    "mtu": 1350,
			    "readBufferSize": 1,
			    "tti": 20,
			    "uplinkCapacity": 5,
			    "writeBufferSize": 1
			},
			"network": "ws",
			"quicSettings": {
			    "header": {
				"type": "none"
			    },
			    "key": "",
			    "security": ""
			},
			"security": "tls",
			"sockopt": {
			    "mark": 0,
			    "tcpFastOpen": false,
			    "tproxy": "off"
			},
			"tcpSettings": {
			    "header": {
				"request": {
				    "headers": {
				    },
				    "method": "GET",
				    "path": [
				    ],
				    "version": "1.1"
				},
				"response": {
				    "headers": {
				    },
				    "reason": "OK",
				    "status": "200",
				    "version": "1.1"
				},
				"type": "none"
			    }
			},
			"tlsSettings": {
			    "allowInsecure": false,
			    "allowInsecureCiphers": false,
			    "alpn": [
			    ],
			    "certificates": [
			    ],
			    "disableSystemRoot": false,
			    "serverName": "www.lyps.site"
			},
			"wsSettings": {
			    "headers": {
				"Host": "www.lyps.site"
			    },
			    "path": "/7c375ed2/"
			}
		    },
		    "tag": "outBound_PROXY"
		}
	    ]
	}
      #+END_SRC
**** COMMENT install proxychains package
     #+begin_src shell :dir "/sudo::/"
       sudo pacman -S --noconfirm proxychains
     #+end_src
**** COMMENT setting proxychains
     [[https://blog.fazero.me/2015/08/31/%E5%88%A9%E7%94%A8proxychains%E5%9C%A8%E7%BB%88%E7%AB%AF%E4%BD%BF%E7%94%A8socks5%E4%BB%A3%E7%90%86/][ref link]]

     #+begin_src shell :dir "/etc/" :results verbatim
       cat proxychains.conf
     #+end_src

     如果要走socks代理的话，前面加个命令 =proxychains4 wget xxx=,比如
     ping google.
     
     #+begin_src shell :results verbatim
       proxychains4 ping -c 3 google.com
     #+end_src

     #+RESULTS:
**** Trojan
***** config file
      
      #+BEGIN_SRC shell
	{
	    "run_type": "server",
	    "local_addr": "0.0.0.0",
	    "local_port": 443,
	    "remote_addr": "127.0.0.1",
	    "remote_port": 80,
	    "password": [
		"password1",
		"password2"
	    ],
	    "log_level": 1,
	    "ssl": {
		"cert": "/path/to/certificate.crt",
		"key": "/path/to/private.key",
		"key_password": "",
		"cipher": "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384",
		"cipher_tls13": "TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384",
		"prefer_server_cipher": true,
		"alpn": [
		    "http/1.1"
		],
		"alpn_port_override": {
		    "h2": 81
		},
		"reuse_session": true,
		"session_ticket": false,
		"session_timeout": 600,
		"plain_http_response": "",
		"curves": "",
		"dhparam": ""
	    },
	    "tcp": {
		"prefer_ipv4": false,
		"no_delay": true,
		"keep_alive": true,
		"reuse_port": false,
		"fast_open": false,
		"fast_open_qlen": 20
	    },
	    "mysql": {
		"enabled": false,
		"server_addr": "127.0.0.1",
		"server_port": 3306,
		"database": "trojan",
		"username": "trojan",
		"password": "",
		"cafile": ""
	    }
	}
      #+END_SRC
** COMMENT New Begin

   - [[http://torum43tajnrxritn4iumy75giwb5yfw6cjq2czjikhtcac67tfif2yd.onion][Torum]]

   - [[http://visitorfi5kl7q7i.onion][Visitor]]
     
   - [[http://xfmro77i3lixucja.onion/search/?q=scheme][BookLibrary]]

   - [[http://torbox3uiot6wchz.onion/][Torbox]]
** Screenshot
*** Flameshot
    
    - Set default save folder:
      
      #+begin_src shell
	flameshot full -c -p ~/.emacs.d/lisp/private/revolt_Blog/static/ox-hugo/
      #+end_src
      
      -c: copying to clipboard
      -p: default save picture path
      
      ref_link: https://cmolinaord.github.io/using-flameshot-screenshot.html
      
      =flameshot gui -d 5000= 延迟加载5000s 再截图当前选定的位置.
